package baekjoon;

import java.util.*;
import java.io.*;

public class 퇴사_14501 {
	static int[] t, p;
	static boolean[] vis;
	static int N, ans, result;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;

		N = Integer.parseInt(br.readLine());
		t = new int[N + 1];
		p = new int[N + 1];
		vis = new boolean[N];
		ans = Integer.MIN_VALUE;

		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			t[i] = Integer.parseInt(st.nextToken());
			p[i] = Integer.parseInt(st.nextToken());
		}

		combination(0, 0);
		System.out.println(ans);
	}

	static void combination(int day, int sum) {
		if (day == N) {
			ans = Math.max(ans, sum);
			return;
		}
		if (day > N)
			return;
		combination(day + t[day], sum + p[day]);
		combination(day + 1, sum);
	}
}
