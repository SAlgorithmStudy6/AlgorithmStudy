

import java.io.*;
import java.util.*;


class Main{

    static final int INF = 1001;
    static int[][] dp;
    static int[][] RGB;
    static int[] start;
    public static void main(String[] args) throws Exception {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;
        int N = Integer.parseInt(br.readLine());
        dp = new int[N+1][3];
        RGB = new int[N+1][N];
        start = new int[N];
        for(int i=1;i<=N;i++){
            st = new StringTokenizer(br.readLine());
            for(int j=0;j<3;j++)
                RGB[i][j] = Integer.parseInt(st.nextToken());
        }
        //첫집 고정
        for(int i=0;i<3;i++){
            for(int j=0;j<3;j++){
                if(i==j)
                    dp[1][j] = RGB[1][j];
                else
                    dp[1][j] = INF;
            }
            for(int j=2;j<=N;j++){
                dp[j][0] = Math.min(dp[j-1][1],dp[j-1][2]) + RGB[j][0];
                dp[j][1] = Math.min(dp[j-1][0],dp[j-1][2]) + RGB[j][1];
                dp[j][2] = Math.min(dp[j-1][0],dp[j-1][1]) + RGB[j][2];

                if(j==N){
                    if(i==0)
                        start[i] = Math.min(dp[N][1],dp[N][2]);
                    else if(i==1)
                        start[i] = Math.min(dp[N][0],dp[N][2]);
                    else
                        start[i] = Math.min(dp[N][0],dp[N][1]);
                }
            }
        }
        System.out.println(Math.min(start[0],Math.min(start[1],start[2])));

    }

}
